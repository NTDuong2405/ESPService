//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClient1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SalaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeName {
            get {
                return this.EmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNameField, value) != true)) {
                    this.EmployeeNameField = value;
                    this.RaisePropertyChanged("EmployeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddEmployee", ReplyAction="http://tempuri.org/IService/AddEmployeeResponse")]
        WCFClient1.ServiceReference1.Employee AddEmployee(WCFClient1.ServiceReference1.Employee composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddEmployee", ReplyAction="http://tempuri.org/IService/AddEmployeeResponse")]
        System.Threading.Tasks.Task<WCFClient1.ServiceReference1.Employee> AddEmployeeAsync(WCFClient1.ServiceReference1.Employee composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetListEmployee", ReplyAction="http://tempuri.org/IService/GetListEmployeeResponse")]
        WCFClient1.ServiceReference1.Employee[] GetListEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetListEmployee", ReplyAction="http://tempuri.org/IService/GetListEmployeeResponse")]
        System.Threading.Tasks.Task<WCFClient1.ServiceReference1.Employee[]> GetListEmployeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetEmployeeBySearch", ReplyAction="http://tempuri.org/IService/GetEmployeeBySearchResponse")]
        WCFClient1.ServiceReference1.Employee[] GetEmployeeBySearch(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetEmployeeBySearch", ReplyAction="http://tempuri.org/IService/GetEmployeeBySearchResponse")]
        System.Threading.Tasks.Task<WCFClient1.ServiceReference1.Employee[]> GetEmployeeBySearchAsync(string keyword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : WCFClient1.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WCFClient1.ServiceReference1.IService>, WCFClient1.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFClient1.ServiceReference1.Employee AddEmployee(WCFClient1.ServiceReference1.Employee composite) {
            return base.Channel.AddEmployee(composite);
        }
        
        public System.Threading.Tasks.Task<WCFClient1.ServiceReference1.Employee> AddEmployeeAsync(WCFClient1.ServiceReference1.Employee composite) {
            return base.Channel.AddEmployeeAsync(composite);
        }
        
        public WCFClient1.ServiceReference1.Employee[] GetListEmployee() {
            return base.Channel.GetListEmployee();
        }
        
        public System.Threading.Tasks.Task<WCFClient1.ServiceReference1.Employee[]> GetListEmployeeAsync() {
            return base.Channel.GetListEmployeeAsync();
        }
        
        public WCFClient1.ServiceReference1.Employee[] GetEmployeeBySearch(string keyword) {
            return base.Channel.GetEmployeeBySearch(keyword);
        }
        
        public System.Threading.Tasks.Task<WCFClient1.ServiceReference1.Employee[]> GetEmployeeBySearchAsync(string keyword) {
            return base.Channel.GetEmployeeBySearchAsync(keyword);
        }
    }
}
